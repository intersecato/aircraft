name: master
on:
  push:
    branches:
      - master

jobs:
  build_a380x:
    name: Build and deploy A380X
    # Prevent running this on forks
    runs-on: ubuntu-latest
    env:
      FBW_PRODUCTION_BUILD: 1
      BUILD_DIR_NAME: a380x-experimental-a380x
      AIRCRAFT_PROJECT_PREFIX: a380x
      STANDALONE_ZIP_NAME: A380X-exp.7z
      AIRCRAFT_VARIANT: a380-842
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4.1
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'
      - name: Force even more disk space
        run: |
          sudo rm -rf /usr/local/julia1.11.0
          sudo rm -rf /usr/share/swift
          sudo rm -rf /opt/microsoft/msedge
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/share/miniconda
          sudo rm -rf /opt/pipx
          sudo rm -rf /usr/lib/heroku
          sudo rm -rf /usr/share/kotlinc
          sudo rm -rf /usr/local/aws-cli
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/local/sqlpackage
          sudo rm -rf /usr/share/gradle-8.10.2
          sudo rm -rf /usr/lib/python3
          sudo rm -rf /usr/lib/python3.10
          sudo rm -rf /usr/lib/mono
          sudo npm uninstall -g netlify-cli --save
          sudo npm uninstall -g parcel --save
          df -h
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo FBW_PRODUCTION_BUILD=1 >> fbw-a380x/.env
          echo AIRCRAFT_PROJECT_PREFIX=${{ env.AIRCRAFT_PROJECT_PREFIX }} >> fbw-a380x/.env
          echo AIRCRAFT_VARIANT=${{ env.AIRCRAFT_VARIANT }} >> fbw-a380x/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Install dependencies
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Build A380X
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a380x.sh --no-tty -j 4
          rm -rf fbw-a380x/src
          docker system prune -af
      - name: Build Fragmenter modules
        run: |
          df -h
          node ./scripts/fragment_a380x.js
          cp ./fbw-a380x/out/build-modules/modules.json ./fbw-a380x/out/flybywire-aircraft-a380-842/install.json
          node ./scripts/install-source_a380x.js
          df -h
      - name: Build Standalone Download files
        run: |
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./fbw-a380x/out/
          rm -rf build-modules
          7z a -t7z -m0=lzma2 -mx=7 -v2g ../../${{ env.BUILD_DIR_NAME }}/${{ env.STANDALONE_ZIP_NAME }} ./flybywire-aircraft-a380-842/
          cd ../../
          df -h
      - name: Upload ZIP to GitHub Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ env.STANDALONE_ZIP_NAME }}
          path: ./${{ env.BUILD_DIR_NAME }}/${{ env.STANDALONE_ZIP_NAME }}
